Namespace Collections

	''' <summary></summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:40:53</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Collections\Generated\DataCollection.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Collections\Generated\DataCollection.tt", "1")> _
	<System.Serializable()> _
	Partial Public MustInherit Class DataCollection(Of T)
		Inherits System.Object
		Implements System.Xml.Serialization.IXmlSerializable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

				m_Previous = New System.Collections.Generic.List(Of T)
				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand _
			)

				MyBase.New()

				m_Command = _Command

				m_Previous = New System.Collections.Generic.List(Of T)
				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader

				m_Previous = New System.Collections.Generic.List(Of T)
				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader, _
				ByVal _Previous As System.Collections.Generic.List(Of T) _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader
				m_Previous = _Previous

				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader, _
				ByVal _Previous As System.Collections.Generic.List(Of T), _
				ByVal _Current As T _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader
				m_Previous = _Previous
				m_Current = _Current

				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader, _
				ByVal _Previous As System.Collections.Generic.List(Of T), _
				ByVal _Current As T, _
				ByVal _Initialised As System.Boolean _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader
				m_Previous = _Previous
				m_Current = _Current
				m_Initialised = _Initialised

				m_OwnerThread = System.Threading.Thread.CurrentThread.ManagedThreadId
			End Sub

			''' <summary>Parametered Constructor (6 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader, _
				ByVal _Previous As System.Collections.Generic.List(Of T), _
				ByVal _Current As T, _
				ByVal _Initialised As System.Boolean, _
				ByVal _OwnerThread As System.Int32 _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader
				m_Previous = _Previous
				m_Current = _Current
				m_Initialised = _Initialised
				m_OwnerThread = _OwnerThread

			End Sub

			''' <summary>Parametered Constructor (7 Parameters)</summary>
			Public Sub New( _
				ByVal _Command As System.Data.IDbCommand, _
				ByVal _Reader As System.Data.IDataReader, _
				ByVal _Previous As System.Collections.Generic.List(Of T), _
				ByVal _Current As T, _
				ByVal _Initialised As System.Boolean, _
				ByVal _OwnerThread As System.Int32, _
				ByVal _Index As System.Int32 _
			)

				MyBase.New()

				m_Command = _Command
				m_Reader = _Reader
				m_Previous = _Previous
				m_Current = _Current
				m_Initialised = _Initialised
				m_OwnerThread = _OwnerThread
				m_Index = _Index

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IXmlSerialisable Implementation "

				#Region " Public Methods "

					''' <summary>Method to Return Schema Depicting Object/Class</summary>
					''' <remarks></remarks>
					Public Function IXmlSerialisable_GetSchema() As System.Xml.Schema.XmlSchema Implements System.Xml.Serialization.IXmlSerializable.GetSchema
						Return Leviathan.Configuration.XmlSerialiser.GenerateSchema(Me.GetType)
					End Function

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_ReadXml( _
						ByVal reader As System.Xml.XmlReader _
					) Implements System.Xml.Serialization.IXmlSerializable.ReadXml
						Leviathan.Configuration.XmlSerialiser.ReadXml(Me, reader)
					End Sub

					''' <summary></summary>
					''' <remarks></remarks>
					Public Sub IXmlSerialisable_WriteXml( _
						ByVal writer As System.Xml.XmlWriter _
					) Implements System.Xml.Serialization.IXmlSerializable.WriteXml
						Leviathan.Configuration.XmlSerialiser.WriteXml(Me, writer)
					End Sub

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Command</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_COMMAND As String = "Command"

			''' <summary>Public Shared Reference to the Name of the Property: Reader</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_READER As String = "Reader"

			''' <summary>Public Shared Reference to the Name of the Property: Previous</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_PREVIOUS As String = "Previous"

			''' <summary>Public Shared Reference to the Name of the Property: Current</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_CURRENT As String = "Current"

			''' <summary>Public Shared Reference to the Name of the Property: Initialised</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INITIALISED As String = "Initialised"

			''' <summary>Public Shared Reference to the Name of the Property: OwnerThread</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_OWNERTHREAD As String = "OwnerThread"

			''' <summary>Public Shared Reference to the Name of the Property: Index</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INDEX As String = "Index"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Command</summary>
			''' <remarks></remarks>
			Private m_Command As System.Data.IDbCommand

			''' <summary>Private Data Storage Variable for Property: Reader</summary>
			''' <remarks></remarks>
			Private m_Reader As System.Data.IDataReader

			''' <summary>Private Data Storage Variable for Property: Previous</summary>
			''' <remarks></remarks>
			Private m_Previous As System.Collections.Generic.List(Of T)

			''' <summary>Private Data Storage Variable for Property: Current</summary>
			''' <remarks></remarks>
			Private m_Current As T

			''' <summary>Private Data Storage Variable for Property: Initialised</summary>
			''' <remarks></remarks>
			Private m_Initialised As System.Boolean

			''' <summary>Private Data Storage Variable for Property: OwnerThread</summary>
			''' <remarks></remarks>
			Private m_OwnerThread As System.Int32

			''' <summary>Private Data Storage Variable for Property: Index</summary>
			''' <remarks></remarks>
			Private m_Index As System.Int32

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Command</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Command")> _
			Public ReadOnly Property Command() As System.Data.IDbCommand
				Get
					Return m_Command
				End Get
			End Property

			''' <summary>Provides Access to the Property: Reader</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Reader")> _
			Public ReadOnly Property Reader() As System.Data.IDataReader
				Get
					Return m_Reader
				End Get
			End Property

			''' <summary>Provides Access to the Property: Previous</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Previous")> _
			Public ReadOnly Property Previous() As System.Collections.Generic.List(Of T)
				Get
					Return m_Previous
				End Get
			End Property

			''' <summary>Provides Access to the Property: Current</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Current")> _
			Public ReadOnly Property Current() As T Implements IEnumerator(Of T).Current
				Get
					Return m_Current
				End Get
			End Property

			''' <summary>Provides Access to the Property: Initialised</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Initialised")> _
			Public ReadOnly Property Initialised() As System.Boolean
				Get
					Return m_Initialised
				End Get
			End Property

			''' <summary>Provides Access to the Property: OwnerThread</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="OwnerThread")> _
			Public ReadOnly Property OwnerThread() As System.Int32
				Get
					Return m_OwnerThread
				End Get
			End Property

			''' <summary>Provides Access to the Property: Index</summary>
			''' <remarks></remarks>
			<System.Xml.Serialization.XmlElement(ElementName:="Index")> _
			Public ReadOnly Property Index() As System.Int32
				Get
					Return m_Index
				End Get
			End Property

		#End Region

	End Class

End Namespace