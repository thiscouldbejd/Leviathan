Namespace Configuration

	''' <summary>Responsible for Configuring Objects.</summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:50:11</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Configuration\Generated\ConfigurationFactory.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Configuration\Generated\ConfigurationFactory.tt", "1")> _
	Partial Public Class ConfigurationFactory
		Inherits System.Object

		#Region " Singleton Implementation "

			#Region " Private Constructors "

				''' <summary>Default Constructor</summary>
				Private Sub New()

					MyBase.New()

					m_Parser = New FromString
					m_Base = Me.GetType().Assembly.GetName().Name
					m_Files = New FileStreamConvertor
				End Sub

				''' <summary>Parametered Constructor (1 Parameters)</summary>
				Private Sub New( _
					ByVal _Parser As FromString _
				)

					MyBase.New()

					Parser = _Parser

					m_Base = Me.GetType().Assembly.GetName().Name
					m_Files = New FileStreamConvertor
				End Sub

				''' <summary>Parametered Constructor (2 Parameters)</summary>
				Private Sub New( _
					ByVal _Parser As FromString, _
					ByVal _Base As System.String _
				)

					MyBase.New()

					Parser = _Parser
					Base = _Base

					m_Files = New FileStreamConvertor
				End Sub

				''' <summary>Parametered Constructor (3 Parameters)</summary>
				Private Sub New( _
					ByVal _Parser As FromString, _
					ByVal _Base As System.String, _
					ByVal _Files As FileStreamConvertor _
				)

					MyBase.New()

					Parser = _Parser
					Base = _Base
					Files = _Files

				End Sub

			#End Region

			#Region " Private Shared Variables "

				Private Shared Singleton_Instances As New Hashtable

				Private Shared Singleton_Instances_LOCK As New Object

			#End Region

			#Region " Public Shared Functions "

				Public Shared Function GetInstance() As ConfigurationFactory

					SyncLock Singleton_Instances_LOCK

						If Not Singleton_Instances.Contains(0) Then Singleton_Instances(0) = New ConfigurationFactory()
						Return Singleton_Instances(0)

					End SyncLock

				End Function


				Public Shared Function GetInstance( _
					ByVal _Parser As FromString _
				) As ConfigurationFactory

					Dim instance_Hashcode As Integer = _
						Leviathan.Caching.Simple.CombineHashCodes(_Parser)

					SyncLock Singleton_Instances_LOCK

						If Not Singleton_Instances.Contains(instance_Hashcode) Then Singleton_Instances(instance_Hashcode) = _
							New ConfigurationFactory(_Parser)

					End SyncLock

					Return Singleton_Instances(instance_Hashcode)

				End Function

				Public Shared Function GetInstance( _
					ByVal _Parser As FromString, _
					ByVal _Base As System.String _
				) As ConfigurationFactory

					Dim instance_Hashcode As Integer = _
						Leviathan.Caching.Simple.CombineHashCodes(_Parser, _Base)

					SyncLock Singleton_Instances_LOCK

						If Not Singleton_Instances.Contains(instance_Hashcode) Then Singleton_Instances(instance_Hashcode) = _
							New ConfigurationFactory(_Parser, _Base)

					End SyncLock

					Return Singleton_Instances(instance_Hashcode)

				End Function

				Public Shared Function GetInstance( _
					ByVal _Parser As FromString, _
					ByVal _Base As System.String, _
					ByVal _Files As FileStreamConvertor _
				) As ConfigurationFactory

					Dim instance_Hashcode As Integer = _
						Leviathan.Caching.Simple.CombineHashCodes(_Parser, _Base, _Files)

					SyncLock Singleton_Instances_LOCK

						If Not Singleton_Instances.Contains(instance_Hashcode) Then Singleton_Instances(instance_Hashcode) = _
							New ConfigurationFactory(_Parser, _Base, _Files)

					End SyncLock

					Return Singleton_Instances(instance_Hashcode)

				End Function


			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Parser</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_PARSER As String = "Parser"

			''' <summary>Public Shared Reference to the Name of the Property: Base</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_BASE As String = "Base"

			''' <summary>Public Shared Reference to the Name of the Property: Files</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_FILES As String = "Files"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Parser</summary>
			''' <remarks></remarks>
			Private m_Parser As FromString

			''' <summary>Private Data Storage Variable for Property: Base</summary>
			''' <remarks></remarks>
			Private m_Base As System.String

			''' <summary>Private Data Storage Variable for Property: Files</summary>
			''' <remarks></remarks>
			Private m_Files As FileStreamConvertor

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Parser</summary>
			''' <remarks></remarks>
			Public Property Parser() As FromString
				Get
					Return m_Parser
				End Get
				Set(value As FromString)
					m_Parser = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Base</summary>
			''' <remarks></remarks>
			Public Property Base() As System.String
				Get
					Return m_Base
				End Get
				Set(value As System.String)
					m_Base = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Files</summary>
			''' <remarks></remarks>
			Public Property Files() As FileStreamConvertor
				Get
					Return m_Files
				End Get
				Set(value As FileStreamConvertor)
					m_Files = value
				End Set
			End Property

		#End Region

	End Class

End Namespace