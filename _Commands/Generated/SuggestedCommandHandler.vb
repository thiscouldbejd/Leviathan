Namespace Commands

	''' <summary></summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:48:00</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Commands\Generated\SuggestedCommandHandler.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Commands\Generated\SuggestedCommandHandler.tt", "1")> _
	Partial Public Class SuggestedCommandHandler
		Inherits System.Object

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

				m_Input = New SuggestedCommandInput
				m_Output = New SuggestedCommandOutput
				m_RetainedArguments = New Char() {SPACE, QUOTE_SINGLE, QUOTE_DOUBLE}
			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _SuggestionsEnabled As System.Boolean _
			)

				MyBase.New()

				m_SuggestionsEnabled = _SuggestionsEnabled

				m_Input = New SuggestedCommandInput
				m_Output = New SuggestedCommandOutput
				m_RetainedArguments = New Char() {SPACE, QUOTE_SINGLE, QUOTE_DOUBLE}
			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _SuggestionsEnabled As System.Boolean, _
				ByVal _Input As SuggestedCommandInput _
			)

				MyBase.New()

				m_SuggestionsEnabled = _SuggestionsEnabled
				m_Input = _Input

				m_Output = New SuggestedCommandOutput
				m_RetainedArguments = New Char() {SPACE, QUOTE_SINGLE, QUOTE_DOUBLE}
			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _SuggestionsEnabled As System.Boolean, _
				ByVal _Input As SuggestedCommandInput, _
				ByVal _Output As SuggestedCommandOutput _
			)

				MyBase.New()

				m_SuggestionsEnabled = _SuggestionsEnabled
				m_Input = _Input
				m_Output = _Output

				m_RetainedArguments = New Char() {SPACE, QUOTE_SINGLE, QUOTE_DOUBLE}
			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _SuggestionsEnabled As System.Boolean, _
				ByVal _Input As SuggestedCommandInput, _
				ByVal _Output As SuggestedCommandOutput, _
				ByVal _RetainedArguments As System.Char() _
			)

				MyBase.New()

				m_SuggestionsEnabled = _SuggestionsEnabled
				m_Input = _Input
				m_Output = _Output
				RetainedArguments = _RetainedArguments

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " Thread-Safe Updates Implementation "

				#Region " Private Variables "

					''' <summary></summary>
					''' <remarks></remarks>
					Private SuggestionsEnabled_LOCK As New System.Object

					''' <summary></summary>
					''' <remarks></remarks>
					Private SuggestionsEnabled_HASVALUE As System.Boolean

				#End Region

				#Region " Public Update Methods "

					Public Function ThreadSafeUpdateSuggestionsEnabled( _
						ByVal _SuggestionsEnabled As System.Boolean _
					) As Boolean

						SyncLock SuggestionsEnabled_LOCK
							If Not SuggestionsEnabled_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(SuggestionsEnabled, _SuggestionsEnabled) Then
								m_SuggestionsEnabled = _SuggestionsEnabled
								SuggestionsEnabled_HASVALUE = True
								Return True
							Else
								Return False
							End If
						End SyncLock

					End Function

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: SuggestionsEnabled</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_SUGGESTIONSENABLED As String = "SuggestionsEnabled"

			''' <summary>Public Shared Reference to the Name of the Property: Input</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INPUT As String = "Input"

			''' <summary>Public Shared Reference to the Name of the Property: Output</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_OUTPUT As String = "Output"

			''' <summary>Public Shared Reference to the Name of the Property: RetainedArguments</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_RETAINEDARGUMENTS As String = "RetainedArguments"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: SuggestionsEnabled</summary>
			''' <remarks></remarks>
			Private m_SuggestionsEnabled As System.Boolean

			''' <summary>Private Data Storage Variable for Property: Input</summary>
			''' <remarks></remarks>
			Private WithEvents m_Input As SuggestedCommandInput

			''' <summary>Private Data Storage Variable for Property: Output</summary>
			''' <remarks></remarks>
			Private WithEvents m_Output As SuggestedCommandOutput

			''' <summary>Private Data Storage Variable for Property: RetainedArguments</summary>
			''' <remarks></remarks>
			Private m_RetainedArguments As System.Char()

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: SuggestionsEnabled</summary>
			''' <remarks></remarks>
			Public ReadOnly Property SuggestionsEnabled() As System.Boolean
				Get
					Return m_SuggestionsEnabled
				End Get
			End Property

			''' <summary>Provides Access to the Property: Input</summary>
			''' <remarks></remarks>
			Public ReadOnly Property Input() As SuggestedCommandInput
				Get
					Return m_Input
				End Get
			End Property

			''' <summary>Provides Access to the Property: Output</summary>
			''' <remarks></remarks>
			Public ReadOnly Property Output() As SuggestedCommandOutput
				Get
					Return m_Output
				End Get
			End Property

			''' <summary>Provides Access to the Property: RetainedArguments</summary>
			''' <remarks></remarks>
			Public Property RetainedArguments() As System.Char()
				Get
					Return m_RetainedArguments
				End Get
				Set(value As System.Char())
					m_RetainedArguments = value
				End Set
			End Property

		#End Region

	End Class

End Namespace