Namespace Commands

	''' <summary></summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:48:30</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Commands\Generated\SuggestedCommandOutput.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Commands\Generated\SuggestedCommandOutput.tt", "1")> _
	Partial Public Class SuggestedCommandOutput
		Inherits System.Object

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Value As System.String _
			)

				MyBase.New()

				m_Value = _Value

			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Value As System.String, _
				ByVal _InputValue As System.String() _
			)

				MyBase.New()

				m_Value = _Value
				m_InputValue = _InputValue

			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Value As System.String, _
				ByVal _InputValue As System.String(), _
				ByVal _Index As System.Int32 _
			)

				MyBase.New()

				m_Value = _Value
				m_InputValue = _InputValue
				m_Index = _Index

			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Value As System.String, _
				ByVal _InputValue As System.String(), _
				ByVal _Index As System.Int32, _
				ByVal _Suggestions As System.String() _
			)

				MyBase.New()

				m_Value = _Value
				m_InputValue = _InputValue
				m_Index = _Index
				m_Suggestions = _Suggestions

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " Thread-Safe Updates Implementation "

				#Region " Private Variables "

					''' <summary></summary>
					''' <remarks></remarks>
					Private Value_LOCK As New System.Object

					''' <summary></summary>
					''' <remarks></remarks>
					Private InputValue_LOCK As New System.Object

					''' <summary></summary>
					''' <remarks></remarks>
					Private Index_LOCK As New System.Object

					''' <summary></summary>
					''' <remarks></remarks>
					Private Suggestions_LOCK As New System.Object

					''' <summary></summary>
					''' <remarks></remarks>
					Private Value_HASVALUE As System.Boolean

					''' <summary></summary>
					''' <remarks></remarks>
					Private InputValue_HASVALUE As System.Boolean

					''' <summary></summary>
					''' <remarks></remarks>
					Private Index_HASVALUE As System.Boolean

					''' <summary></summary>
					''' <remarks></remarks>
					Private Suggestions_HASVALUE As System.Boolean

				#End Region

				#Region " Public Update Methods "

					Public Function ThreadSafeUpdateValue( _
						ByVal _Value As System.String _
					) As Boolean

						SyncLock Value_LOCK
							If Not Value_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(Value, _Value) Then
								m_Value = _Value
								Value_HASVALUE = True
								Return True
							Else
								Return False
							End If
						End SyncLock

					End Function

					Public Function ThreadSafeUpdateInputValue( _
						ByVal _InputValue As System.String() _
					) As Boolean

						SyncLock InputValue_LOCK
							If Not InputValue_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(InputValue, _InputValue) Then
								m_InputValue = _InputValue
								InputValue_HASVALUE = True
								Return True
							Else
								Return False
							End If
						End SyncLock

					End Function

					Public Function ThreadSafeUpdateIndex( _
						ByVal _Index As System.Int32 _
					) As Boolean

						SyncLock Index_LOCK
							If Not Index_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(Index, _Index) Then
								m_Index = _Index
								Index_HASVALUE = True
								Return True
							Else
								Return False
							End If
						End SyncLock

					End Function

					Public Function ThreadSafeUpdateSuggestions( _
						ByVal _Suggestions As System.String() _
					) As Boolean

						SyncLock Suggestions_LOCK
							If Not Suggestions_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(Suggestions, _Suggestions) Then
								m_Suggestions = _Suggestions
								Suggestions_HASVALUE = True
								Return True
							Else
								Return False
							End If
						End SyncLock

					End Function

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Value</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_VALUE As String = "Value"

			''' <summary>Public Shared Reference to the Name of the Property: InputValue</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INPUTVALUE As String = "InputValue"

			''' <summary>Public Shared Reference to the Name of the Property: Index</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_INDEX As String = "Index"

			''' <summary>Public Shared Reference to the Name of the Property: Suggestions</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_SUGGESTIONS As String = "Suggestions"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Value</summary>
			''' <remarks></remarks>
			Private m_Value As System.String

			''' <summary>Private Data Storage Variable for Property: InputValue</summary>
			''' <remarks></remarks>
			Private m_InputValue As System.String()

			''' <summary>Private Data Storage Variable for Property: Index</summary>
			''' <remarks></remarks>
			Private m_Index As System.Int32

			''' <summary>Private Data Storage Variable for Property: Suggestions</summary>
			''' <remarks></remarks>
			Private m_Suggestions As System.String()

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Value</summary>
			''' <remarks></remarks>
			Public ReadOnly Property Value() As System.String
				Get
					Return m_Value
				End Get
			End Property

			''' <summary>Provides Access to the Property: InputValue</summary>
			''' <remarks></remarks>
			Public ReadOnly Property InputValue() As System.String()
				Get
					Return m_InputValue
				End Get
			End Property

			''' <summary>Provides Access to the Property: Index</summary>
			''' <remarks></remarks>
			Public ReadOnly Property Index() As System.Int32
				Get
					Return m_Index
				End Get
			End Property

			''' <summary>Provides Access to the Property: Suggestions</summary>
			''' <remarks></remarks>
			Public ReadOnly Property Suggestions() As System.String()
				Get
					Return m_Suggestions
				End Get
			End Property

		#End Region

	End Class

End Namespace