Namespace Commands

	''' <summary>Command Performance Logging</summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:47:05</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Commands\Generated\CommandPerformanceSnapshot.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Commands\Generated\CommandPerformanceSnapshot.tt", "1")> _
	Partial Public Class CommandPerformanceSnapshot
		Inherits System.Object
		Implements System.IComparable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

				m_Created = DateTime.Now
				m_WorkingSet = Environment.WorkingSet
			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String _
			)

				MyBase.New()

				WorkDone = _WorkDone

				m_Created = DateTime.Now
				m_WorkingSet = Environment.WorkingSet
			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details

				m_Created = DateTime.Now
				m_WorkingSet = Environment.WorkingSet
			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String, _
				ByVal _Order As System.Int32 _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details
				Order = _Order

				m_Created = DateTime.Now
				m_WorkingSet = Environment.WorkingSet
			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String, _
				ByVal _Order As System.Int32, _
				ByVal _Created As System.DateTime _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details
				Order = _Order
				Created = _Created

				m_WorkingSet = Environment.WorkingSet
			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String, _
				ByVal _Order As System.Int32, _
				ByVal _Created As System.DateTime, _
				ByVal _WorkingSet As System.Int64 _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details
				Order = _Order
				Created = _Created
				WorkingSet = _WorkingSet

			End Sub

			''' <summary>Parametered Constructor (6 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String, _
				ByVal _Order As System.Int32, _
				ByVal _Created As System.DateTime, _
				ByVal _WorkingSet As System.Int64, _
				ByVal _TimeTaken As System.TimeSpan _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details
				Order = _Order
				Created = _Created
				WorkingSet = _WorkingSet
				TimeTaken = _TimeTaken

			End Sub

			''' <summary>Parametered Constructor (7 Parameters)</summary>
			Public Sub New( _
				ByVal _WorkDone As System.String, _
				ByVal _Details As System.String, _
				ByVal _Order As System.Int32, _
				ByVal _Created As System.DateTime, _
				ByVal _WorkingSet As System.Int64, _
				ByVal _TimeTaken As System.TimeSpan, _
				ByVal _MemoryUsed As System.Double _
			)

				MyBase.New()

				WorkDone = _WorkDone
				Details = _Details
				Order = _Order
				Created = _Created
				WorkingSet = _WorkingSet
				TimeTaken = _TimeTaken
				MemoryUsed = _MemoryUsed

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IComparable Implementation "

				#Region " Public Methods "

					''' <summary>Comparison Method</summary>
					Public Overridable Function IComparable_CompareTo( _
						ByVal value As System.Object _
					) As System.Int32 Implements System.IComparable.CompareTo

						Dim typed_Value As CommandPerformanceSnapshot = TryCast(value, CommandPerformanceSnapshot)

						If typed_Value Is Nothing Then

							Throw New ArgumentException(String.Format("Value is not of comparable type: {0}", value.GetType.Name), "Value")

						Else

							Dim return_Value As Integer = 0

							return_Value = TimeTaken.CompareTo(typed_Value.TimeTaken)
							If return_Value <> 0 Then Return return_Value

							Return return_Value

						End If

					End Function

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: WorkDone</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_WORKDONE As String = "WorkDone"

			''' <summary>Public Shared Reference to the Name of the Property: Details</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_DETAILS As String = "Details"

			''' <summary>Public Shared Reference to the Name of the Property: Order</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_ORDER As String = "Order"

			''' <summary>Public Shared Reference to the Name of the Property: Created</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_CREATED As String = "Created"

			''' <summary>Public Shared Reference to the Name of the Property: WorkingSet</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_WORKINGSET As String = "WorkingSet"

			''' <summary>Public Shared Reference to the Name of the Property: TimeTaken</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_TIMETAKEN As String = "TimeTaken"

			''' <summary>Public Shared Reference to the Name of the Property: MemoryUsed</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_MEMORYUSED As String = "MemoryUsed"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: WorkDone</summary>
			''' <remarks></remarks>
			Private m_WorkDone As System.String

			''' <summary>Private Data Storage Variable for Property: Details</summary>
			''' <remarks></remarks>
			Private m_Details As System.String

			''' <summary>Private Data Storage Variable for Property: Order</summary>
			''' <remarks></remarks>
			Private m_Order As System.Int32

			''' <summary>Private Data Storage Variable for Property: Created</summary>
			''' <remarks></remarks>
			Private m_Created As System.DateTime

			''' <summary>Private Data Storage Variable for Property: WorkingSet</summary>
			''' <remarks></remarks>
			Private m_WorkingSet As System.Int64

			''' <summary>Private Data Storage Variable for Property: TimeTaken</summary>
			''' <remarks></remarks>
			Private m_TimeTaken As System.TimeSpan

			''' <summary>Private Data Storage Variable for Property: MemoryUsed</summary>
			''' <remarks></remarks>
			Private m_MemoryUsed As System.Double

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: WorkDone</summary>
			''' <remarks></remarks>
			Public Property WorkDone() As System.String
				Get
					Return m_WorkDone
				End Get
				Set(value As System.String)
					m_WorkDone = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Details</summary>
			''' <remarks></remarks>
			Public Property Details() As System.String
				Get
					Return m_Details
				End Get
				Set(value As System.String)
					m_Details = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Order</summary>
			''' <remarks></remarks>
			Public Property Order() As System.Int32
				Get
					Return m_Order
				End Get
				Set(value As System.Int32)
					m_Order = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Created</summary>
			''' <remarks></remarks>
			Public Property Created() As System.DateTime
				Get
					Return m_Created
				End Get
				Set(value As System.DateTime)
					m_Created = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: WorkingSet</summary>
			''' <remarks></remarks>
			Public Property WorkingSet() As System.Int64
				Get
					Return m_WorkingSet
				End Get
				Set(value As System.Int64)
					m_WorkingSet = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: TimeTaken</summary>
			''' <remarks></remarks>
			Public Property TimeTaken() As System.TimeSpan
				Get
					Return m_TimeTaken
				End Get
				Set(value As System.TimeSpan)
					m_TimeTaken = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: MemoryUsed</summary>
			''' <remarks></remarks>
			Public Property MemoryUsed() As System.Double
				Get
					Return m_MemoryUsed
				End Get
				Set(value As System.Double)
					m_MemoryUsed = value
				End Set
			End Property

		#End Region

	End Class

End Namespace