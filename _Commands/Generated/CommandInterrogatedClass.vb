Namespace Commands

	''' <summary></summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:46:03</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Commands\Generated\CommandInterrogatedClass.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Commands\Generated\CommandInterrogatedClass.tt", "1")> _
	Partial Public Class CommandInterrogatedClass
		Inherits System.Object
		Implements System.IComparable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String _
			)

				MyBase.New()

				Name = _Name

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String, _
				ByVal _Hidden As System.Boolean _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description
				Hidden = _Hidden

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String, _
				ByVal _Hidden As System.Boolean, _
				ByVal _AssemblyName As System.String _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description
				Hidden = _Hidden
				AssemblyName = _AssemblyName

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (6 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String, _
				ByVal _Hidden As System.Boolean, _
				ByVal _AssemblyName As System.String, _
				ByVal _AssemblyVersion As System.String _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description
				Hidden = _Hidden
				AssemblyName = _AssemblyName
				AssemblyVersion = _AssemblyVersion

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (7 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String, _
				ByVal _Hidden As System.Boolean, _
				ByVal _AssemblyName As System.String, _
				ByVal _AssemblyVersion As System.String, _
				ByVal _Flags As CommandInterrogatedFlag() _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description
				Hidden = _Hidden
				AssemblyName = _AssemblyName
				AssemblyVersion = _AssemblyVersion
				Flags = _Flags

				PopulateFromConstructor()

			End Sub

			''' <summary>Parametered Constructor (8 Parameters)</summary>
			Public Sub New( _
				ByVal _Name As System.String, _
				ByVal _Analyser As Leviathan.Inspection.TypeAnalyser, _
				ByVal _Description As System.String, _
				ByVal _Hidden As System.Boolean, _
				ByVal _AssemblyName As System.String, _
				ByVal _AssemblyVersion As System.String, _
				ByVal _Flags As CommandInterrogatedFlag(), _
				ByVal _Methods As CommandInterrogatedMethod() _
			)

				MyBase.New()

				Name = _Name
				Analyser = _Analyser
				Description = _Description
				Hidden = _Hidden
				AssemblyName = _AssemblyName
				AssemblyVersion = _AssemblyVersion
				Flags = _Flags
				Methods = _Methods

				PopulateFromConstructor()

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IComparable Implementation "

				#Region " Public Methods "

					''' <summary>Comparison Method</summary>
					Public Overridable Function IComparable_CompareTo( _
						ByVal value As System.Object _
					) As System.Int32 Implements System.IComparable.CompareTo

						Dim typed_Value As CommandInterrogatedClass = TryCast(value, CommandInterrogatedClass)

						If typed_Value Is Nothing Then

							Throw New ArgumentException(String.Format("Value is not of comparable type: {0}", value.GetType.Name), "Value")

						Else

							Dim return_Value As Integer = 0

							If Not Name Is Nothing Then return_Value = Name.CompareTo(typed_Value.Name)
							If return_Value <> 0 Then Return return_Value

							Return return_Value

						End If

					End Function

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Name</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_NAME As String = "Name"

			''' <summary>Public Shared Reference to the Name of the Property: Analyser</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_ANALYSER As String = "Analyser"

			''' <summary>Public Shared Reference to the Name of the Property: Description</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_DESCRIPTION As String = "Description"

			''' <summary>Public Shared Reference to the Name of the Property: Hidden</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_HIDDEN As String = "Hidden"

			''' <summary>Public Shared Reference to the Name of the Property: AssemblyName</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_ASSEMBLYNAME As String = "AssemblyName"

			''' <summary>Public Shared Reference to the Name of the Property: AssemblyVersion</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_ASSEMBLYVERSION As String = "AssemblyVersion"

			''' <summary>Public Shared Reference to the Name of the Property: Flags</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_FLAGS As String = "Flags"

			''' <summary>Public Shared Reference to the Name of the Property: Methods</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_METHODS As String = "Methods"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Name</summary>
			''' <remarks></remarks>
			Private m_Name As System.String

			''' <summary>Private Data Storage Variable for Property: Analyser</summary>
			''' <remarks></remarks>
			Private m_Analyser As Leviathan.Inspection.TypeAnalyser

			''' <summary>Private Data Storage Variable for Property: Description</summary>
			''' <remarks></remarks>
			Private m_Description As System.String

			''' <summary>Private Data Storage Variable for Property: Hidden</summary>
			''' <remarks></remarks>
			Private m_Hidden As System.Boolean

			''' <summary>Private Data Storage Variable for Property: AssemblyName</summary>
			''' <remarks></remarks>
			Private m_AssemblyName As System.String

			''' <summary>Private Data Storage Variable for Property: AssemblyVersion</summary>
			''' <remarks></remarks>
			Private m_AssemblyVersion As System.String

			''' <summary>Private Data Storage Variable for Property: Flags</summary>
			''' <remarks></remarks>
			Private m_Flags As CommandInterrogatedFlag()

			''' <summary>Private Data Storage Variable for Property: Methods</summary>
			''' <remarks></remarks>
			Private m_Methods As CommandInterrogatedMethod()

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Name</summary>
			''' <remarks></remarks>
			Public Property Name() As System.String
				Get
					Return m_Name
				End Get
				Set(value As System.String)
					m_Name = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Analyser</summary>
			''' <remarks></remarks>
			Public Property Analyser() As Leviathan.Inspection.TypeAnalyser
				Get
					Return m_Analyser
				End Get
				Set(value As Leviathan.Inspection.TypeAnalyser)
					m_Analyser = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Description</summary>
			''' <remarks></remarks>
			Public Property Description() As System.String
				Get
					Return m_Description
				End Get
				Set(value As System.String)
					m_Description = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Hidden</summary>
			''' <remarks></remarks>
			Public Property Hidden() As System.Boolean
				Get
					Return m_Hidden
				End Get
				Set(value As System.Boolean)
					m_Hidden = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: AssemblyName</summary>
			''' <remarks></remarks>
			Public Property AssemblyName() As System.String
				Get
					Return m_AssemblyName
				End Get
				Set(value As System.String)
					m_AssemblyName = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: AssemblyVersion</summary>
			''' <remarks></remarks>
			Public Property AssemblyVersion() As System.String
				Get
					Return m_AssemblyVersion
				End Get
				Set(value As System.String)
					m_AssemblyVersion = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Flags</summary>
			''' <remarks></remarks>
			Public Property Flags() As CommandInterrogatedFlag()
				Get
					Return m_Flags
				End Get
				Set(value As CommandInterrogatedFlag())
					m_Flags = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Methods</summary>
			''' <remarks></remarks>
			Public Property Methods() As CommandInterrogatedMethod()
				Get
					Return m_Methods
				End Get
				Set(value As CommandInterrogatedMethod())
					m_Methods = value
				End Set
			End Property

		#End Region

	End Class

End Namespace