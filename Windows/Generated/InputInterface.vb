''' <summary></summary>
''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
''' <generator-date>10/02/2014 15:39:04</generator-date>
''' <generator-functions>1</generator-functions>
''' <generator-source>Leviathan\Windows\Generated\InputInterface.tt</generator-source>
''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
''' <generator-version>1</generator-version>
Partial Public Class InputInterface
	Inherits System.Windows.Window

	#Region " Public Constructors "

		''' <summary>Default Constructor</summary>
		Public Sub New()

			MyBase.New()

			m_Handler = New Leviathan.Commands.SuggestedCommandHandler
			m_Cache = Leviathan.Caching.Simple.GetInstance(GetType(Leviathan.Commands.ControlCommands).GetHashCode(), True)
			m_ExecutingThreads = New List(Of System.Threading.Thread)
			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (1 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String _
		)

			MyBase.New()

			Prompt = _Prompt

			m_Handler = New Leviathan.Commands.SuggestedCommandHandler
			m_Cache = Leviathan.Caching.Simple.GetInstance(GetType(Leviathan.Commands.ControlCommands).GetHashCode(), True)
			m_ExecutingThreads = New List(Of System.Threading.Thread)
			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (2 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler

			m_Cache = Leviathan.Caching.Simple.GetInstance(GetType(Leviathan.Commands.ControlCommands).GetHashCode(), True)
			m_ExecutingThreads = New List(Of System.Threading.Thread)
			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (3 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache

			m_ExecutingThreads = New List(Of System.Threading.Thread)
			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (4 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread

			m_ExecutingThreads = New List(Of System.Threading.Thread)
			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (5 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread) _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads

			m_ExecutingWindows = New List(Of OutputInterface)
			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (6 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface) _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows

			m_COLOUR_ACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 245, 245, 245)
			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (7 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT

			m_COLOUR_NONACTIVE_TEXT = Windows.Media.Color.FromArgb(255, 150, 150, 150)
			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (8 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT

			m_RecentCommands = New List(Of String)(New String() {Nothing})
			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (9 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String) _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands

			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (10 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32 _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition

			m_CacheList = New System.Collections.Generic.List(Of String)
			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (11 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String) _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (12 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32 _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (13 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32 _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (14 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (15 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (16 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double, _
			ByVal _InputBoxCharacterWidth As System.Int32 _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight
			InputBoxCharacterWidth = _InputBoxCharacterWidth

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (17 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double, _
			ByVal _InputBoxCharacterWidth As System.Int32, _
			ByVal _Window_Locked As System.Boolean _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight
			InputBoxCharacterWidth = _InputBoxCharacterWidth
			Window_Locked = _Window_Locked

			m_COLOUR_UNLOCKED_BORDER = Windows.Media.Color.FromArgb(255, 26, 26, 26)
			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (18 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double, _
			ByVal _InputBoxCharacterWidth As System.Int32, _
			ByVal _Window_Locked As System.Boolean, _
			ByVal _COLOUR_UNLOCKED_BORDER As System.Windows.Media.Color _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight
			InputBoxCharacterWidth = _InputBoxCharacterWidth
			Window_Locked = _Window_Locked
			COLOUR_UNLOCKED_BORDER = _COLOUR_UNLOCKED_BORDER

			m_COLOUR_LOCKED_BORDER = Windows.Media.Color.FromArgb(255, 52, 26, 26)
			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (19 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double, _
			ByVal _InputBoxCharacterWidth As System.Int32, _
			ByVal _Window_Locked As System.Boolean, _
			ByVal _COLOUR_UNLOCKED_BORDER As System.Windows.Media.Color, _
			ByVal _COLOUR_LOCKED_BORDER As System.Windows.Media.Color _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight
			InputBoxCharacterWidth = _InputBoxCharacterWidth
			Window_Locked = _Window_Locked
			COLOUR_UNLOCKED_BORDER = _COLOUR_UNLOCKED_BORDER
			COLOUR_LOCKED_BORDER = _COLOUR_LOCKED_BORDER

			InitializeComponent()

		End Sub

		''' <summary>Parametered Constructor (20 Parameters)</summary>
		Public Sub New( _
			ByVal _Prompt As System.String, _
			ByVal _Handler As Leviathan.Commands.SuggestedCommandHandler, _
			ByVal _Cache As Leviathan.Caching.Simple, _
			ByVal _InputChangedThread As System.Threading.Thread, _
			ByVal _ExecutingThreads As List(Of System.Threading.Thread), _
			ByVal _ExecutingWindows As List(Of OutputInterface), _
			ByVal _COLOUR_ACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color, _
			ByVal _RecentCommands As System.Collections.Generic.List(Of String), _
			ByVal _RecentCommandPosition As System.Int32, _
			ByVal _CacheList As System.Collections.Generic.List(Of String), _
			ByVal _CachePosition As System.Int32, _
			ByVal _ExecutedThreadsCount As System.Int32, _
			ByVal _SingleCharacterWidth As System.Double, _
			ByVal _SingleLineHeight As System.Double, _
			ByVal _InputBoxCharacterWidth As System.Int32, _
			ByVal _Window_Locked As System.Boolean, _
			ByVal _COLOUR_UNLOCKED_BORDER As System.Windows.Media.Color, _
			ByVal _COLOUR_LOCKED_BORDER As System.Windows.Media.Color, _
			ByVal _Opacity_Locked As System.Boolean _
		)

			MyBase.New()

			Prompt = _Prompt
			Handler = _Handler
			Cache = _Cache
			InputChangedThread = _InputChangedThread
			ExecutingThreads = _ExecutingThreads
			ExecutingWindows = _ExecutingWindows
			COLOUR_ACTIVE_TEXT = _COLOUR_ACTIVE_TEXT
			COLOUR_NONACTIVE_TEXT = _COLOUR_NONACTIVE_TEXT
			RecentCommands = _RecentCommands
			RecentCommandPosition = _RecentCommandPosition
			CacheList = _CacheList
			CachePosition = _CachePosition
			ExecutedThreadsCount = _ExecutedThreadsCount
			SingleCharacterWidth = _SingleCharacterWidth
			SingleLineHeight = _SingleLineHeight
			InputBoxCharacterWidth = _InputBoxCharacterWidth
			Window_Locked = _Window_Locked
			COLOUR_UNLOCKED_BORDER = _COLOUR_UNLOCKED_BORDER
			COLOUR_LOCKED_BORDER = _COLOUR_LOCKED_BORDER
			Opacity_Locked = _Opacity_Locked

			InitializeComponent()

		End Sub

	#End Region

	#Region " Class Plumbing/Interface Code "

		#Region " Thread-Safe Updates Implementation "

			#Region " Private Variables "

				''' <summary></summary>
				''' <remarks></remarks>
				Private ExecutingThreads_LOCK As New System.Object

				''' <summary></summary>
				''' <remarks></remarks>
				Private ExecutingThreads_HASVALUE As System.Boolean

			#End Region

			#Region " Public Update Methods "

				Public Function ThreadSafeUpdateExecutingThreads( _
					ByVal _ExecutingThreads As List(Of System.Threading.Thread) _
				) As Boolean

					SyncLock ExecutingThreads_LOCK
						If Not ExecutingThreads_HASVALUE OrElse Not Leviathan.Comparison.Comparer.AreEqual(ExecutingThreads, _ExecutingThreads) Then
							ExecutingThreads = _ExecutingThreads
							ExecutingThreads_HASVALUE = True
							Return True
						Else
							Return False
						End If
					End SyncLock

				End Function

			#End Region

		#End Region

	#End Region

	#Region " Public Constants "

		''' <summary>Public Shared Reference to the Name of the Property: Prompt</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_PROMPT As String = "Prompt"

		''' <summary>Public Shared Reference to the Name of the Property: Handler</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_HANDLER As String = "Handler"

		''' <summary>Public Shared Reference to the Name of the Property: Cache</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_CACHE As String = "Cache"

		''' <summary>Public Shared Reference to the Name of the Property: InputChangedThread</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_INPUTCHANGEDTHREAD As String = "InputChangedThread"

		''' <summary>Public Shared Reference to the Name of the Property: ExecutingThreads</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_EXECUTINGTHREADS As String = "ExecutingThreads"

		''' <summary>Public Shared Reference to the Name of the Property: ExecutingWindows</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_EXECUTINGWINDOWS As String = "ExecutingWindows"

		''' <summary>Public Shared Reference to the Name of the Property: COLOUR_ACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_COLOUR_ACTIVE_TEXT As String = "COLOUR_ACTIVE_TEXT"

		''' <summary>Public Shared Reference to the Name of the Property: COLOUR_NONACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_COLOUR_NONACTIVE_TEXT As String = "COLOUR_NONACTIVE_TEXT"

		''' <summary>Public Shared Reference to the Name of the Property: RecentCommands</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_RECENTCOMMANDS As String = "RecentCommands"

		''' <summary>Public Shared Reference to the Name of the Property: RecentCommandPosition</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_RECENTCOMMANDPOSITION As String = "RecentCommandPosition"

		''' <summary>Public Shared Reference to the Name of the Property: CacheList</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_CACHELIST As String = "CacheList"

		''' <summary>Public Shared Reference to the Name of the Property: CachePosition</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_CACHEPOSITION As String = "CachePosition"

		''' <summary>Public Shared Reference to the Name of the Property: ExecutedThreadsCount</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_EXECUTEDTHREADSCOUNT As String = "ExecutedThreadsCount"

		''' <summary>Public Shared Reference to the Name of the Property: SingleCharacterWidth</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_SINGLECHARACTERWIDTH As String = "SingleCharacterWidth"

		''' <summary>Public Shared Reference to the Name of the Property: SingleLineHeight</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_SINGLELINEHEIGHT As String = "SingleLineHeight"

		''' <summary>Public Shared Reference to the Name of the Property: InputBoxCharacterWidth</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_INPUTBOXCHARACTERWIDTH As String = "InputBoxCharacterWidth"

		''' <summary>Public Shared Reference to the Name of the Property: Window_Locked</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_WINDOW_LOCKED As String = "Window_Locked"

		''' <summary>Public Shared Reference to the Name of the Property: COLOUR_UNLOCKED_BORDER</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_COLOUR_UNLOCKED_BORDER As String = "COLOUR_UNLOCKED_BORDER"

		''' <summary>Public Shared Reference to the Name of the Property: COLOUR_LOCKED_BORDER</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_COLOUR_LOCKED_BORDER As String = "COLOUR_LOCKED_BORDER"

		''' <summary>Public Shared Reference to the Name of the Property: Opacity_Locked</summary>
		''' <remarks></remarks>
		Public Const PROPERTY_OPACITY_LOCKED As String = "Opacity_Locked"

	#End Region

	#Region " Private Variables "

		''' <summary>Private Data Storage Variable for Property: Prompt</summary>
		''' <remarks></remarks>
		Private m_Prompt As System.String

		''' <summary>Private Data Storage Variable for Property: Handler</summary>
		''' <remarks></remarks>
		Private WithEvents m_Handler As Leviathan.Commands.SuggestedCommandHandler

		''' <summary>Private Data Storage Variable for Property: Cache</summary>
		''' <remarks></remarks>
		Private WithEvents m_Cache As Leviathan.Caching.Simple

		''' <summary>Private Data Storage Variable for Property: InputChangedThread</summary>
		''' <remarks></remarks>
		Private m_InputChangedThread As System.Threading.Thread

		''' <summary>Private Data Storage Variable for Property: ExecutingThreads</summary>
		''' <remarks></remarks>
		Private m_ExecutingThreads As List(Of System.Threading.Thread)

		''' <summary>Private Data Storage Variable for Property: ExecutingWindows</summary>
		''' <remarks></remarks>
		Private m_ExecutingWindows As List(Of OutputInterface)

		''' <summary>Private Data Storage Variable for Property: COLOUR_ACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Private m_COLOUR_ACTIVE_TEXT As System.Windows.Media.Color

		''' <summary>Private Data Storage Variable for Property: COLOUR_NONACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Private m_COLOUR_NONACTIVE_TEXT As System.Windows.Media.Color

		''' <summary>Private Data Storage Variable for Property: RecentCommands</summary>
		''' <remarks></remarks>
		Private m_RecentCommands As System.Collections.Generic.List(Of String)

		''' <summary>Private Data Storage Variable for Property: RecentCommandPosition</summary>
		''' <remarks></remarks>
		Private m_RecentCommandPosition As System.Int32

		''' <summary>Private Data Storage Variable for Property: CacheList</summary>
		''' <remarks></remarks>
		Private m_CacheList As System.Collections.Generic.List(Of String)

		''' <summary>Private Data Storage Variable for Property: CachePosition</summary>
		''' <remarks></remarks>
		Private m_CachePosition As System.Int32

		''' <summary>Private Data Storage Variable for Property: ExecutedThreadsCount</summary>
		''' <remarks></remarks>
		Private m_ExecutedThreadsCount As System.Int32

		''' <summary>Private Data Storage Variable for Property: SingleCharacterWidth</summary>
		''' <remarks></remarks>
		Private m_SingleCharacterWidth As System.Double

		''' <summary>Private Data Storage Variable for Property: SingleLineHeight</summary>
		''' <remarks></remarks>
		Private m_SingleLineHeight As System.Double

		''' <summary>Private Data Storage Variable for Property: InputBoxCharacterWidth</summary>
		''' <remarks></remarks>
		Private m_InputBoxCharacterWidth As System.Int32

		''' <summary>Private Data Storage Variable for Property: Window_Locked</summary>
		''' <remarks></remarks>
		Private m_Window_Locked As System.Boolean

		''' <summary>Private Data Storage Variable for Property: COLOUR_UNLOCKED_BORDER</summary>
		''' <remarks></remarks>
		Private m_COLOUR_UNLOCKED_BORDER As System.Windows.Media.Color

		''' <summary>Private Data Storage Variable for Property: COLOUR_LOCKED_BORDER</summary>
		''' <remarks></remarks>
		Private m_COLOUR_LOCKED_BORDER As System.Windows.Media.Color

		''' <summary>Private Data Storage Variable for Property: Opacity_Locked</summary>
		''' <remarks></remarks>
		Private m_Opacity_Locked As System.Boolean

	#End Region

	#Region " Public Properties "

		''' <summary>Provides Access to the Property: Prompt</summary>
		''' <remarks></remarks>
		Public Property Prompt() As System.String
			Get
				Return m_Prompt
			End Get
			Set(value As System.String)
				m_Prompt = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Handler</summary>
		''' <remarks></remarks>
		Public Property Handler() As Leviathan.Commands.SuggestedCommandHandler
			Get
				Return m_Handler
			End Get
			Set(value As Leviathan.Commands.SuggestedCommandHandler)
				m_Handler = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Cache</summary>
		''' <remarks></remarks>
		Public Property Cache() As Leviathan.Caching.Simple
			Get
				Return m_Cache
			End Get
			Set(value As Leviathan.Caching.Simple)
				m_Cache = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: InputChangedThread</summary>
		''' <remarks></remarks>
		Public Property InputChangedThread() As System.Threading.Thread
			Get
				Return m_InputChangedThread
			End Get
			Set(value As System.Threading.Thread)
				m_InputChangedThread = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: ExecutingThreads</summary>
		''' <remarks></remarks>
		Public Property ExecutingThreads() As List(Of System.Threading.Thread)
			Get
				Return m_ExecutingThreads
			End Get
			Set(value As List(Of System.Threading.Thread))
				m_ExecutingThreads = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: ExecutingWindows</summary>
		''' <remarks></remarks>
		Public Property ExecutingWindows() As List(Of OutputInterface)
			Get
				Return m_ExecutingWindows
			End Get
			Set(value As List(Of OutputInterface))
				m_ExecutingWindows = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: COLOUR_ACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Public Property COLOUR_ACTIVE_TEXT() As System.Windows.Media.Color
			Get
				Return m_COLOUR_ACTIVE_TEXT
			End Get
			Set(value As System.Windows.Media.Color)
				m_COLOUR_ACTIVE_TEXT = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: COLOUR_NONACTIVE_TEXT</summary>
		''' <remarks></remarks>
		Public Property COLOUR_NONACTIVE_TEXT() As System.Windows.Media.Color
			Get
				Return m_COLOUR_NONACTIVE_TEXT
			End Get
			Set(value As System.Windows.Media.Color)
				m_COLOUR_NONACTIVE_TEXT = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: RecentCommands</summary>
		''' <remarks></remarks>
		Public Property RecentCommands() As System.Collections.Generic.List(Of String)
			Get
				Return m_RecentCommands
			End Get
			Set(value As System.Collections.Generic.List(Of String))
				m_RecentCommands = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: RecentCommandPosition</summary>
		''' <remarks></remarks>
		Public Property RecentCommandPosition() As System.Int32
			Get
				Return m_RecentCommandPosition
			End Get
			Set(value As System.Int32)
				m_RecentCommandPosition = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: CacheList</summary>
		''' <remarks></remarks>
		Public Property CacheList() As System.Collections.Generic.List(Of String)
			Get
				Return m_CacheList
			End Get
			Set(value As System.Collections.Generic.List(Of String))
				m_CacheList = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: CachePosition</summary>
		''' <remarks></remarks>
		Public Property CachePosition() As System.Int32
			Get
				Return m_CachePosition
			End Get
			Set(value As System.Int32)
				m_CachePosition = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: ExecutedThreadsCount</summary>
		''' <remarks></remarks>
		Public Property ExecutedThreadsCount() As System.Int32
			Get
				Return m_ExecutedThreadsCount
			End Get
			Set(value As System.Int32)
				m_ExecutedThreadsCount = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: SingleCharacterWidth</summary>
		''' <remarks></remarks>
		Public Property SingleCharacterWidth() As System.Double
			Get
				Return m_SingleCharacterWidth
			End Get
			Set(value As System.Double)
				m_SingleCharacterWidth = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: SingleLineHeight</summary>
		''' <remarks></remarks>
		Public Property SingleLineHeight() As System.Double
			Get
				Return m_SingleLineHeight
			End Get
			Set(value As System.Double)
				m_SingleLineHeight = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: InputBoxCharacterWidth</summary>
		''' <remarks></remarks>
		Public Property InputBoxCharacterWidth() As System.Int32
			Get
				Return m_InputBoxCharacterWidth
			End Get
			Set(value As System.Int32)
				m_InputBoxCharacterWidth = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Window_Locked</summary>
		''' <remarks></remarks>
		Public Property Window_Locked() As System.Boolean
			Get
				Return m_Window_Locked
			End Get
			Set(value As System.Boolean)
				m_Window_Locked = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: COLOUR_UNLOCKED_BORDER</summary>
		''' <remarks></remarks>
		Public Property COLOUR_UNLOCKED_BORDER() As System.Windows.Media.Color
			Get
				Return m_COLOUR_UNLOCKED_BORDER
			End Get
			Set(value As System.Windows.Media.Color)
				m_COLOUR_UNLOCKED_BORDER = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: COLOUR_LOCKED_BORDER</summary>
		''' <remarks></remarks>
		Public Property COLOUR_LOCKED_BORDER() As System.Windows.Media.Color
			Get
				Return m_COLOUR_LOCKED_BORDER
			End Get
			Set(value As System.Windows.Media.Color)
				m_COLOUR_LOCKED_BORDER = value
			End Set
		End Property

		''' <summary>Provides Access to the Property: Opacity_Locked</summary>
		''' <remarks></remarks>
		Public Property Opacity_Locked() As System.Boolean
			Get
				Return m_Opacity_Locked
			End Get
			Set(value As System.Boolean)
				m_Opacity_Locked = value
			End Set
		End Property

	#End Region

End Class