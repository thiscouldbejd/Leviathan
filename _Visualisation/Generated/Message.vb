Namespace Visualisation

	''' <summary></summary>
	''' <autogenerated>Generated from a T4 template. Modifications will be lost, if applicable use a partial class instead.</autogenerated>
	''' <generator-date>10/02/2014 15:54:09</generator-date>
	''' <generator-functions>1</generator-functions>
	''' <generator-source>Leviathan\_Visualisation\Generated\Message.tt</generator-source>
	''' <generator-template>Text-Templates\Classes\VB_Object.tt</generator-template>
	''' <generator-version>1</generator-version>
	<System.CodeDom.Compiler.GeneratedCode("Leviathan\_Visualisation\Generated\Message.tt", "1")> _
	Partial Public Class Message
		Inherits System.Object
		Implements System.IFormattable

		#Region " Public Constructors "

			''' <summary>Default Constructor</summary>
			Public Sub New()

				MyBase.New()

				m_Type = InformationType.General
				m_Values = New System.String() {}
				PostConstruction()

			End Sub

			''' <summary>Parametered Constructor (1 Parameters)</summary>
			Public Sub New( _
				ByVal _Title As System.String _
			)

				MyBase.New()

				Title = _Title

				m_Type = InformationType.General
				m_Values = New System.String() {}
				PostConstruction()

			End Sub

			''' <summary>Parametered Constructor (2 Parameters)</summary>
			Public Sub New( _
				ByVal _Title As System.String, _
				ByVal _Type As InformationType _
			)

				MyBase.New()

				Title = _Title
				[Type] = _Type

				m_Values = New System.String() {}
				PostConstruction()

			End Sub

			''' <summary>Parametered Constructor (3 Parameters)</summary>
			Public Sub New( _
				ByVal _Title As System.String, _
				ByVal _Type As InformationType, _
				ByVal _Values As System.String() _
			)

				MyBase.New()

				Title = _Title
				[Type] = _Type
				Values = _Values

				PostConstruction()

			End Sub

			''' <summary>Parametered Constructor (4 Parameters)</summary>
			Public Sub New( _
				ByVal _Title As System.String, _
				ByVal _Type As InformationType, _
				ByVal _Values As System.String(), _
				ByVal _DisplayTitle As System.String _
			)

				MyBase.New()

				Title = _Title
				[Type] = _Type
				Values = _Values
				m_DisplayTitle = _DisplayTitle

				PostConstruction()

			End Sub

			''' <summary>Parametered Constructor (5 Parameters)</summary>
			Public Sub New( _
				ByVal _Title As System.String, _
				ByVal _Type As InformationType, _
				ByVal _Values As System.String(), _
				ByVal _DisplayTitle As System.String, _
				ByVal _MaxLength As System.Int32 _
			)

				MyBase.New()

				Title = _Title
				[Type] = _Type
				Values = _Values
				m_DisplayTitle = _DisplayTitle
				m_MaxLength = _MaxLength

				PostConstruction()

			End Sub

		#End Region

		#Region " Class Plumbing/Interface Code "

			#Region " IFormattable Implementation "

				#Region " Public Constants "

					''' <summary>Public Shared Reference to the Name of the Property: AsString</summary>
					''' <remarks></remarks>
					Public Const PROPERTY_ASSTRING As String = "AsString"

				#End Region

				#Region " Public Properties "

					''' <summary></summary>
					''' <remarks></remarks>
					Public ReadOnly Property AsString() As System.String
						Get
							Return Me.ToString()
						End Get
					End Property

				#End Region

				#Region " Public Shared Methods "

					Public Shared Function ToString_default( _
						ByVal Title As System.String _
					) As String

						Return String.Format( _
							"{0}", _
							Title)

					End Function

				#End Region

				#Region " Public Methods "

					Public Overloads Overrides Function ToString() As String

						Return Me.ToString(String.Empty, Nothing)

					End Function

					Public Overloads Function ToString( _
						ByVal format As String _
					) As String

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then

							Return ToString_default( _
								Title _
							)

						End If

						Return String.Empty

					End Function

					Public Overloads Function ToString( _
						ByVal format As String, _
						ByVal formatProvider As System.IFormatProvider _
					) As String Implements System.IFormattable.ToString

						If String.IsNullOrEmpty(format) OrElse String.Compare(format, "default", True) = 0 Then	

							Return ToString_default( _
								Title _
							)

						End If

						Return String.Empty

					End Function

				#End Region

			#End Region

		#End Region

		#Region " Public Constants "

			''' <summary>Public Shared Reference to the Name of the Property: Title</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_TITLE As String = "Title"

			''' <summary>Public Shared Reference to the Name of the Property: Type</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_TYPE As String = "Type"

			''' <summary>Public Shared Reference to the Name of the Property: Values</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_VALUES As String = "Values"

			''' <summary>Public Shared Reference to the Name of the Property: DisplayTitle</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_DISPLAYTITLE As String = "DisplayTitle"

			''' <summary>Public Shared Reference to the Name of the Property: MaxLength</summary>
			''' <remarks></remarks>
			Public Const PROPERTY_MAXLENGTH As String = "MaxLength"

		#End Region

		#Region " Private Variables "

			''' <summary>Private Data Storage Variable for Property: Title</summary>
			''' <remarks></remarks>
			Private m_Title As System.String

			''' <summary>Private Data Storage Variable for Property: Type</summary>
			''' <remarks></remarks>
			Private m_Type As InformationType

			''' <summary>Private Data Storage Variable for Property: Values</summary>
			''' <remarks></remarks>
			Private m_Values As System.String()

			''' <summary>Private Data Storage Variable for Property: DisplayTitle</summary>
			''' <remarks></remarks>
			Private m_DisplayTitle As System.String

			''' <summary>Private Data Storage Variable for Property: MaxLength</summary>
			''' <remarks></remarks>
			Private m_MaxLength As System.Int32

		#End Region

		#Region " Public Properties "

			''' <summary>Provides Access to the Property: Title</summary>
			''' <remarks></remarks>
			Public Property Title() As System.String
				Get
					Return m_Title
				End Get
				Set(value As System.String)
					m_Title = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Type</summary>
			''' <remarks></remarks>
			Public Property [Type]() As InformationType
				Get
					Return m_Type
				End Get
				Set(value As InformationType)
					m_Type = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: Values</summary>
			''' <remarks></remarks>
			Public Property Values() As System.String()
				Get
					Return m_Values
				End Get
				Set(value As System.String())
					m_Values = value
				End Set
			End Property

			''' <summary>Provides Access to the Property: DisplayTitle</summary>
			''' <remarks></remarks>
			Public ReadOnly Property DisplayTitle() As System.String
				Get
					Return m_DisplayTitle
				End Get
			End Property

			''' <summary>Provides Access to the Property: MaxLength</summary>
			''' <remarks></remarks>
			Public ReadOnly Property MaxLength() As System.Int32
				Get
					Return m_MaxLength
				End Get
			End Property

		#End Region

	End Class

End Namespace